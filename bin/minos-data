#!/usr/bin/env python
# coding: utf-8

"""
minos-data: Manages the data lookup library.

Usage:
  minos-data tag [-t TAGLIST] <file-or-folder>...

Options:
-t TAGLIST, --tags=TAGLIST  Specifies the tags to be applied
"""

import re
import os, sys
import hashlib
import itertools
from docopt import docopt

#import minos.data

try: input = raw_input
except NameError: pass

if __name__ == '__main__':
  arguments = docopt(__doc__, version='0.1')

  if arguments["tag"]:
    tags = []
    if "TAGLIST" in arguments:
      tags = re.split(r'[,\s]+', arguments["TAGLIST"])

    folders = [os.path.abspath(x) for x in arguments["<file-or-folder>"] if os.path.isdir(x)]
    files   = sorted(os.path.abspath(x) for x in arguments["<file-or-folder>"] if os.path.isfile(x))
    max_len = max(len(x) for x in itertools.chain(files, folders))

    #Â Calculate the sha1sum for every file being added explicitly
    hashes = {}
    for filename in files:
      sha = hashlib.sha1()
      with open(filename, 'rb') as f:
        data = f.read(4096)
        while data:
          sha.update(data)
          data = f.read(4096)
      hashes[filename] = sha.hexdigest()


    print ("\n".join(" "*42 + x for x in folders))
    print ("\n".join(hashes[x] + "  " + x.ljust(max_len) + " :" for x in files))
    
  
  print (tags)